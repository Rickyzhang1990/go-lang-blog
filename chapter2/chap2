程序结构
2.1 名称
GO名称的命名规则，名称的开头是一个字母或者下划线，后面可以跟任意数量的字符数字或者下划线。
常用的30个内设的预声明的常量，类型和函数
常量：true false iota nil 
类型：int int8 int16 int32 int64 
     uint uint8 uint16 uint32 uint6 unitptr 
     float32 float64 complex128 complex64 
     bool byte rune string error 
函数：make len cap new append copy close delete 
     complex real imag
     panic recover
 2.2 声明
 声明是给一个程序实体命名，并设定其部分或全部属性。有4个主要的声明：变量（var）常量（const）类型（type）和函数（func）.
 程序见 scripts内boiling.go  常量boilingF是一个包级别的声明，f,c是函数内的局部变量
 
 函数调用
 在程序中定义子函数，可以供主程序调用。示例如chap2_script中FtoC.go
2.3 变量（var） 
var声明是创建一个具体类型的变量，然后给它加一个名字，设置它的初始值 通用形式如下
var name type = expression
短变量声明 使用如下表达形式：name := expression  可以进行变量声明和初始化
例如 i := 100 i ,j := 0,1
可以使用for循环进行初始化
指针：指针的值是一个变量的地址，不是所有的值都有地址，但是所有变量都有。使用指针，可以再无须知道变量名字的情况下，间接读取或更新变量的值
x := 1 
p := &x  //p是整型指针,指向x 
fmt.Println(*p) //"1"
*p = 2          //等于x = 2 
fmt.Println(x)  //结果等于2 
指针到底是什么：
